name: Secure CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  security-events: write  # Ensures CodeQL can upload scan results

jobs:
  security:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Manually Clone CodeQL
        run: git clone --branch v3 https://github.com/github/codeql-action.git $GITHUB_WORKSPACE/codeql-action

      - name: Initialize CodeQL (Local)
        uses: ./codeql-action/init@v3
        with:
          languages: python

      - name: Perform CodeQL Analysis
        uses: ./codeql-action/analyze@v3

      - name: Run Secret Scanning with GitLeaks
        uses: gitleaks/gitleaks-action@v2
        continue-on-error: true

      - name: Run Dependency Security Audit (pip-audit)
        run: |
          pip install --upgrade pip
          pip install pip-audit
          pip-audit

      - name: Run Dependency Security Audit (Snyk)
        if: env.SNYK_TOKEN != ''
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

  build:
    needs: security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest || echo "Tests failed, but continuing..."

  container_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          exit-code: "1"
          severity: "HIGH,CRITICAL"

      - name: Scan for Secrets with TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: "./"  # Scans entire repo
          base: "origin/main"

  deploy:
    needs: [build, container_scan]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Kind (Kubernetes in Docker)
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind create cluster --name ci-cluster
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
          kubectl cluster-info

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deployment.yaml -f service.yaml
